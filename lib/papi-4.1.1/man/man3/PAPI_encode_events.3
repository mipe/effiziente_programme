.\" $Id: PAPI_encode_events.3,v 1.2 2006-11-17 00:39:17 terpstra Exp $
.TH PAPI_encode_events 3 "October, 2006" "PAPI Programmer's Reference" PAPI

.SH NAME
PAPI_encode_events \- read event definitions from a file and modify the existing PAPI preset table.

.SH SYNOPSIS
.B C Interface
.nf
.B #include <papi.h>
.BI "int PAPI_encode_events(char * event_file, int replace);"
.fi

.SH DESCRIPTION
.B NOTE: This API has been deprecated in PAPI 3.5 pending a data structure redesign.

This function reads event descriptions from a file where they are stored in comma separated value format 
and modifies or adds events to the PAPI preset event table. The file format is described below.
This function presently works only to define or modify PAPI preset events.

.SH FILE FORMAT
The comma separated value file format is one that can be easily edited in a standard text editor or
a csv-aware spreadsheet application, and can be easily parsed. Text strings can contain commas, but only if
the strings are enclosed in quotes. Each entry in the file is a separate line, and each field, including empty
fields, is separated by a comma from its neighbor. The specific format used in this case consists of a title
line for readability, a blank line, and a series of lines containing event definitions. A portion of such a
file (for Pentium 4) is shown below:

.nf
.if t .ft CW
name,derived,postfix,short_descr,long_descr,note,[native,...]

PAPI_L1_ICM,NOT_DERIVED,,"L1I cache misses","Level 1 instruction cache misses",,BPU_fetch_request_TCMISS
PAPI_L2_TCM,NOT_DERIVED,,"L2 cache misses","Level 2 cache misses",,BSQ_cache_reference_RD_2ndL_MISS_WR_2ndL_MISS
PAPI_TLB_DM,NOT_DERIVED,,"Data TLB misses","Data translation lookaside buffer misses",,page_walk_type_DTMISS
MY_PAPI_TLB_DM,NOT_DERIVED,,"Data TLB misses","Data translation lookaside buffer misses","This is a note for my event",page_walk_type_DTMISS
.if t .ft P
.fi


.SH ARGUMENTS
.LP
.I event_file
--  string containing the name of the csv event file to be read
.LP
.I replace
--  1 to replace existing events, or 0 to prevent accidental replacement

.SH RETURN VALUES
On success, the function returns 
.B PAPI_OK.
On error, a non-zero error code is returned by the function.

.SH ERRORS
.TP
.B "PAPI_EPERM"
You are trying to modify an existing event without specifying 
.I replace.
.TP
.B "PAPI_EISRUN"
You are trying to modify an event that has been added to an EventSet.
.TP
.B "PAPI_EINVAL"
One or more of the arguments or fields of the info structure is invalid.
.TP
.B "PAPI_ENOTPRESET"
The PAPI preset table is full and there is no room for a new event.
.TP
.B "PAPI_ENOEVNT"
The event specified is not a PAPI preset. Usually because the PAPI_PRESET_MASK bit is not set.

.SH EXAMPLE
.LP
.nf
.if t .ft CW
/* Use the command line utility to create a csv copy of the currently defined events */
> /papi/utils/decode -a -> current.csv
/* View and modify the events in an editor */
> vi current.csv
...
/* Load the modified events into the preset table */
if (PAPI_encode_events("./current.csv", 1) != PAPI_OK)
  handle_error(1);
.if t .ft P
.fi

.SH BUGS
This function has no known bugs.

.SH SEE ALSO
.BR papi_decode "(1)",
.BR PAPI "(3)," 
.BR PAPIF "(3)," 
.BR PAPI_get_event_info "(3)",
.BR PAPI_set_event_info "(3)"
