.\" $Id: PAPI_num_hwctrs.3,v 1.8 2009-09-10 20:19:38 terpstra Exp $
.TH PAPI_num_hwctrs 3 "April, 2007" "PAPI Programmer's Reference" "PAPI"

.SH NAME
 PAPI_num_hwctrs \- return the number of hardware counters on the cpu
 PAPI_num_cmp_hwctrs \- return the number of hardware counters for the specified component

.SH SYNOPSIS
.B C Interface
.nf
.B #include <papi.h>
.BI "int PAPI_num_hwctrs();"
.BI "int PAPI_num_cmp_hwctrs(int " cidx ");"
.fi
.B Fortran Interface
.nf
.B #include "fpapi.h"
.BI PAPIF_num_hwctrs(C_INT\  num)
.fi

.SH DESCRIPTION
.B "PAPI_num_hwctrs()" 
returns the number of physical hardware counters present in the cpu. 
This is included to preserve backward compatability.
.LP
.B "PAPI_num_cmp_hwctrs()" 
returns the number of counters present in the specified component. 
By convention, component 0 is always the cpu.
This count does not include any
special purpose registers or other performance hardware. 
.BR "PAPI_library_init" "(3) must be called"
in order for this function to return anything greater than 0.

.SH ARGUMENTS
.I cidx
-- An integer identifier for a component. By convention, component 0 is always the cpu component.

.SH RETURN VALUES
On success, this function returns a value greater than zero.
.LP
A zero result usually means the library has not been initialized.

.SH EXAMPLES
.LP
.nf
.if t .ft CW
/* Query the cpu component for the number of counters. */
printf("%d hardware counters found.\n", PAPI_num_cmp_hwctrs(0));
.if t .ft P
.fi

.SH BUGS
None.

.SH SEE ALSO
.BR PAPI_init_library "(3),"
.BR PAPI "(3)," PAPI_F "(3)"
